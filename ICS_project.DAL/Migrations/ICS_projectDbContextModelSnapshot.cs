// <auto-generated />
using System;
using ICS_project.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ICS_project.DAL.Migrations
{
    [DbContext(typeof(ICS_projectDbContext))]
    partial class ICS_projectDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.4");

            modelBuilder.Entity("ICS_project.DAL.Entities.ActivityEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("End")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Start")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("UserId");

                    b.ToTable("Activities");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d60a30d9-7b9c-4635-a7b3-3d89833d672c"),
                            End = new DateTime(2023, 5, 30, 5, 30, 50, 0, DateTimeKind.Unspecified),
                            Name = "Programming",
                            ProjectId = new Guid("03ac647a-3807-4079-9b27-78942ea34fb9"),
                            Start = new DateTime(2023, 5, 30, 3, 34, 50, 0, DateTimeKind.Unspecified),
                            UserId = new Guid("854c99f8-30a1-48e9-9975-5c5ba0d7e703")
                        },
                        new
                        {
                            Id = new Guid("110f6520-9cb3-401d-8abc-6950f8d4cbff"),
                            End = new DateTime(2021, 1, 25, 6, 30, 50, 0, DateTimeKind.Unspecified),
                            Name = "Skating",
                            ProjectId = new Guid("7baee999-46ab-447e-9107-0efab35044bf"),
                            Start = new DateTime(2021, 1, 25, 4, 50, 50, 0, DateTimeKind.Unspecified),
                            UserId = new Guid("e82ed712-0d16-49b2-8a27-ec99742cf9a4")
                        },
                        new
                        {
                            Id = new Guid("5cfd2fbd-59b1-481c-94fe-8cdf0fed3854"),
                            End = new DateTime(2023, 5, 23, 7, 30, 50, 0, DateTimeKind.Unspecified),
                            Name = "Skiing",
                            ProjectId = new Guid("03ac647a-3807-4079-9b27-78942ea34fb9"),
                            Start = new DateTime(2023, 5, 23, 4, 34, 50, 0, DateTimeKind.Unspecified),
                            UserId = new Guid("854c99f8-30a1-48e9-9975-5c5ba0d7e703")
                        });
                });

            modelBuilder.Entity("ICS_project.DAL.Entities.ProjectEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            Id = new Guid("03ac647a-3807-4079-9b27-78942ea34fb9"),
                            Name = "IFJ"
                        },
                        new
                        {
                            Id = new Guid("7baee999-46ab-447e-9107-0efab35044bf"),
                            Name = "ICS"
                        },
                        new
                        {
                            Id = new Guid("fe63da7b-d028-4cea-b7ac-e597a75e4d40"),
                            Name = "IPP"
                        },
                        new
                        {
                            Id = new Guid("e1aa63e9-d011-46c6-a502-374806e86fd5"),
                            Name = "IZU"
                        });
                });

            modelBuilder.Entity("ICS_project.DAL.Entities.ProjectUserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("UserId");

                    b.ToTable("ProjectAmounts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("08ca6f49-6d8e-4a92-bbfe-35e15adfb4a4"),
                            ProjectId = new Guid("03ac647a-3807-4079-9b27-78942ea34fb9"),
                            UserId = new Guid("854c99f8-30a1-48e9-9975-5c5ba0d7e703")
                        },
                        new
                        {
                            Id = new Guid("a4946474-12fd-4a11-a2ae-dd4aa79a1b4e"),
                            ProjectId = new Guid("03ac647a-3807-4079-9b27-78942ea34fb9"),
                            UserId = new Guid("f3a9d51d-4c23-4f89-89c1-b59f3a0b8e9e")
                        },
                        new
                        {
                            Id = new Guid("a7be96a2-3ab5-4617-b42c-856fea8ea86c"),
                            ProjectId = new Guid("7baee999-46ab-447e-9107-0efab35044bf"),
                            UserId = new Guid("e82ed712-0d16-49b2-8a27-ec99742cf9a4")
                        });
                });

            modelBuilder.Entity("ICS_project.DAL.Entities.TagActivityEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ActivityId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TagId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.HasIndex("TagId");

                    b.ToTable("TagAmounts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4c6b11fb-07a3-4d2c-a9e6-1c6547c94721"),
                            ActivityId = new Guid("d60a30d9-7b9c-4635-a7b3-3d89833d672c"),
                            TagId = new Guid("15a17df4-fce6-4f69-a8c9-9e026b0ad2e4")
                        },
                        new
                        {
                            Id = new Guid("5c8a9383-b2e4-42dc-a012-3f47bf45db6d"),
                            ActivityId = new Guid("5cfd2fbd-59b1-481c-94fe-8cdf0fed3854"),
                            TagId = new Guid("110f6520-9cb3-401d-8abc-6950f8d4cbff")
                        },
                        new
                        {
                            Id = new Guid("a7d02af9-8709-4662-a8eb-945a14a67b02"),
                            ActivityId = new Guid("110f6520-9cb3-401d-8abc-6950f8d4cbff"),
                            TagId = new Guid("d0ebd9b5-05aa-4d53-b5a5-8afd0231bc3f")
                        });
                });

            modelBuilder.Entity("ICS_project.DAL.Entities.TagEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Tag");

                    b.HasData(
                        new
                        {
                            Id = new Guid("15a17df4-fce6-4f69-a8c9-9e026b0ad2e4"),
                            Name = "School",
                            UserId = new Guid("854c99f8-30a1-48e9-9975-5c5ba0d7e703")
                        },
                        new
                        {
                            Id = new Guid("110f6520-9cb3-401d-8abc-6950f8d4cbff"),
                            Name = "Work",
                            UserId = new Guid("f3a9d51d-4c23-4f89-89c1-b59f3a0b8e9e")
                        },
                        new
                        {
                            Id = new Guid("d0ebd9b5-05aa-4d53-b5a5-8afd0231bc3f"),
                            Name = "Mischief",
                            UserId = new Guid("e82ed712-0d16-49b2-8a27-ec99742cf9a4")
                        });
                });

            modelBuilder.Entity("ICS_project.DAL.Entities.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageURL")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("854c99f8-30a1-48e9-9975-5c5ba0d7e703"),
                            ImageURL = "https://static.gigwise.com/artists/Editors_7_quesada_750.jpg",
                            Name = "Tom",
                            Surname = "Smith"
                        },
                        new
                        {
                            Id = new Guid("f3a9d51d-4c23-4f89-89c1-b59f3a0b8e9e"),
                            ImageURL = "https://babewings.cz/wp-content/uploads/2020/03/Super-Woman-obe-oci.jpg",
                            Name = "Klara",
                            Surname = "Konecna"
                        },
                        new
                        {
                            Id = new Guid("79267a2c-bc56-46f5-8e7c-1020512f9f38"),
                            ImageURL = "https://as2.ftcdn.net/v2/jpg/00/60/59/01/1000_F_60590191_YKoAK1ZcOkyR4PDQcmVfXszbqOk1uSbJ.jpg",
                            Name = "Petr",
                            Surname = "Novak"
                        },
                        new
                        {
                            Id = new Guid("e82ed712-0d16-49b2-8a27-ec99742cf9a4"),
                            ImageURL = "https://images.squarespace-cdn.com/content/v1/5ceffd427a27670001628fb2/1561716917340-U5L6LYWZQL3D5JC7T3RR/download.jpeg",
                            Name = "Darina",
                            Surname = "Novotna"
                        });
                });

            modelBuilder.Entity("ICS_project.DAL.Entities.ActivityEntity", b =>
                {
                    b.HasOne("ICS_project.DAL.Entities.ProjectEntity", "Project")
                        .WithMany("Activities")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ICS_project.DAL.Entities.UserEntity", "User")
                        .WithMany("Activities")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ICS_project.DAL.Entities.ProjectUserEntity", b =>
                {
                    b.HasOne("ICS_project.DAL.Entities.ProjectEntity", "Project")
                        .WithMany("Users")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ICS_project.DAL.Entities.UserEntity", "User")
                        .WithMany("Projects")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ICS_project.DAL.Entities.TagActivityEntity", b =>
                {
                    b.HasOne("ICS_project.DAL.Entities.ActivityEntity", "Activity")
                        .WithMany("Tags")
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ICS_project.DAL.Entities.TagEntity", "Tag")
                        .WithMany("Activities")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Activity");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("ICS_project.DAL.Entities.ActivityEntity", b =>
                {
                    b.Navigation("Tags");
                });

            modelBuilder.Entity("ICS_project.DAL.Entities.ProjectEntity", b =>
                {
                    b.Navigation("Activities");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("ICS_project.DAL.Entities.TagEntity", b =>
                {
                    b.Navigation("Activities");
                });

            modelBuilder.Entity("ICS_project.DAL.Entities.UserEntity", b =>
                {
                    b.Navigation("Activities");

                    b.Navigation("Projects");
                });
#pragma warning restore 612, 618
        }
    }
}
